import { Button, message, Modal, Input } from "antd";
import { useState } from "react";

const CreateMan = ({ orderId, open, handleClose }) => {
  console.log("üöÄ ~ CreateMan ~ orderId:", orderId);
  const [isOrderSubmitted, setIsOrderSubmitted] = useState(false); // Khai b√°o state theo d√µi tr·∫°ng th√°i ƒë∆°n h√†ng ƒë√£ ƒë∆∞·ª£c g·ª≠i
  const token = localStorage.getItem("token");
  const [price, setPrice] = useState(""); // Gi√°
  const [constructionStaff, setConstructionStaff] = useState(""); // Nh√¢n vi√™n thi c√¥ng
  const [endDate, setEndDate] = useState(""); // Ng√†y k·∫øt th√∫c
  const [content, setContent] = useState(""); // N·ªôi dung
  const [submittedOrders, setSubmittedOrders] = useState([]); // L∆∞u danh s√°ch c√°c ƒë∆°n h√†ng ƒë√£ g·ª≠i
  const [maintenanceID, setMaintenanceID] = useState(null); // L∆∞u orderId sau khi t·∫°o
  // H√†m g·ª≠i form khi ng∆∞·ªùi d√πng b·∫•m n√∫t
  const formatDate = (date) => {
    // Chuy·ªÉn ƒë·ªïi t·ª´ yyyy-mm-dd th√†nh dd-mm-yyyy
    const [year, month, day] = date.split("-"); // L·∫•y year, month, day t·ª´ ng√†y
    return `${day}-${month}-${year}`; // ƒê·ªãnh d·∫°ng l·∫°i th√†nh dd-mm-yyyy
  };
  const handleSubmit = async () => {
    // Ki·ªÉm tra n·∫øu t·∫•t c·∫£ c√°c tr∆∞·ªùng ƒë√£ ƒë∆∞·ª£c nh·∫≠p
    if (!price || !constructionStaff || !endDate || !content) {
      message.error("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.");
      return;
    }
    const formattedEndDate = formatDate(endDate); // Chuy·ªÉn ƒë·ªãnh d·∫°ng ng√†y b√°o gi√°

    const data = {
      price: parseFloat(price),
      constructionStaff,
      endDate: formattedEndDate, // G·ª≠i ng√†y ƒë√£ ƒë∆∞·ª£c ƒë·ªãnh d·∫°ng
      content,
    };

    try {
      const response = await fetch(
        `http://localhost:8081/api/v1/consulting-staff/create-maintenance/${orderId}`,
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json", // ƒê·∫£m b·∫£o g·ª≠i JSON
            Authorization: `Bearer ${token}`, // N·∫øu c·∫ßn token
          },
          body: JSON.stringify(data), // Chuy·ªÉn ƒë·ªëi t∆∞·ª£ng th√†nh chu·ªói JSON
        }
      );

      if (response.ok) {
        message.success("D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng.");
        setIsOrderSubmitted(true); // ƒê√°nh d·∫•u l√† ƒë√£ g·ª≠i ƒë∆°n h√†ng, v√¥ hi·ªáu h√≥a n√∫t "G·ª≠i"
        // Reset c√°c tr∆∞·ªùng form sau khi g·ª≠i th√†nh c√¥ng
        setPrice("");
        setConstructionStaff("");
        setEndDate("");
        setContent("");
      } else {
        const errorData = await response.json();
        message.error(`G·ª≠i th·∫•t b·∫°i: ${errorData.message || "C√≥ l·ªói x·∫£y ra"}`);
      }
    } catch (error) {
      message.error("C√≥ l·ªói x·∫£y ra khi g·ª≠i d·ªØ li·ªáu.");
      console.error("Error:", error);
    }
  };
  // H√†m GET: Xem chi ti·∫øt ƒë∆°n h√†ng
  return (
    <Modal
      open={open}
      onCancel={handleClose}
      footer={null}
      title="L·∫≠p b·∫£n b√°o gi√°"
    >
      <form>
        {/* Input c√°c tr∆∞·ªùng */}
        <Input
          type="number"
          placeholder="gi√° ti·ªÅn"
          value={price}
          onChange={(e) => setPrice(e.target.value)}
          style={{ marginBottom: "1rem" }}
        />

        <Input
          type="text"
          placeholder="nh√¢n vi√™n "
          value={constructionStaff}
          onChange={(e) => setConstructionStaff(e.target.value)}
          style={{ marginBottom: "1rem" }}
        />

        <Input
          type="text"
          placeholder="n·ªôi dung"
          value={content}
          onChange={(e) => setContent(e.target.value)}
          style={{ marginBottom: "1rem" }}
        />
        <Input
          type="date"
          placeholder="Ng√†y k·∫øt th√∫c"
          value={endDate}
          onChange={(e) => {
            setEndDate(e.target.value); // Ch·ªâ l∆∞u gi√° tr·ªã ng√†y chu·∫©n YYYY-MM-DD
          }}
          style={{ marginBottom: "1rem" }}
        />

        {!submittedOrders.includes(orderId) && ( // N·∫øu ch∆∞a g·ª≠i th√¨ hi·ªÉn th·ªã n√∫t
          <Button
            type="primary"
            onClick={handleSubmit}
            style={{ marginTop: "1rem" }}
          >
            G·ª≠i ƒë∆°n gi√°
          </Button>
        )}
      </form>
    </Modal>
  );
};

export default CreateMan;

// import { Button, message, Modal, Input, Descriptions } from "antd";
// import { useState } from "react";

// const CreateMan = ({ orderId, open, handleClose }) => {
//   const [isOrderSubmitted, setIsOrderSubmitted] = useState(false); // Theo d√µi tr·∫°ng th√°i ƒë∆°n h√†ng ƒë√£ g·ª≠i
//   const token = localStorage.getItem("token");
//   const [price, setPrice] = useState(""); // Gi√°
//   const [constructionStaff, setConstructionStaff] = useState(""); // Nh√¢n vi√™n thi c√¥ng
//   const [endDate, setEndDate] = useState(""); // Ng√†y k·∫øt th√∫c
//   const [content, setContent] = useState(""); // N·ªôi dung
//   const [maintenanceID, setMaintenanceID] = useState(null); // L∆∞u maintenanceID sau khi t·∫°o
//   const [maintenanceDetails, setMaintenanceDetails] = useState(null); // L∆∞u th√¥ng tin chi ti·∫øt
//   const [detailsModalVisible, setDetailsModalVisible] = useState(false); // ƒêi·ªÅu khi·ªÉn hi·ªÉn th·ªã Modal chi ti·∫øt

//   // H√†m ƒë·ªãnh d·∫°ng ng√†y (dd-mm-yyyy)
//   const formatDate = (date) => {
//     const [year, month, day] = date.split("-");
//     return `${day}-${month}-${year}`;
//   };

//   // H√†m POST: G·ª≠i form t·∫°o ƒë∆°n h√†ng
//   const handleSubmit = async () => {
//     if (!price || !constructionStaff || !endDate || !content) {
//       message.error("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.");
//       return;
//     }

//     const data = {
//       price: parseFloat(price),
//       constructionStaff,
//       endDate: formatDate(endDate),
//       content,
//     };

//     try {
//       const response = await fetch(
//         `http://localhost:8081/api/v1/consulting-staff/create-maintenance/${orderId}`,
//         {
//           method: "POST",
//           headers: {
//             "Content-Type": "application/json",
//             Authorization: `Bearer ${token}`,
//           },
//           body: JSON.stringify(data),
//         }
//       );

//       if (response.ok) {
//         const result = await response.json();
//         setMaintenanceID(result.data.maintenanceID); // L∆∞u maintenanceID
//         message.success(
//           `ƒê∆°n h√†ng ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng v·ªõi ID: ${result.data.maintenanceID}`
//         );
//         setPrice("");
//         setConstructionStaff("");
//         setEndDate("");
//         setContent("");
//         setIsOrderSubmitted(true);
//       } else {
//         const errorData = await response.json();
//         message.error(
//           `T·∫°o ƒë∆°n h√†ng th·∫•t b·∫°i: ${errorData.message || "C√≥ l·ªói x·∫£y ra"}`
//         );
//       }
//     } catch (error) {
//       message.error("C√≥ l·ªói x·∫£y ra khi t·∫°o ƒë∆°n h√†ng.");
//       console.error("Error:", error);
//     }
//   };

//   return (
//     <>
//       {/* Modal t·∫°o ƒë∆°n h√†ng */}
//       <Modal
//         open={open}
//         onCancel={handleClose}
//         footer={null}
//         title="L·∫≠p b·∫£n b√°o gi√°"
//       >
//         <form>
//           <Input
//             type="number"
//             placeholder="Gi√° ti·ªÅn"
//             value={price}
//             onChange={(e) => setPrice(e.target.value)}
//             style={{ marginBottom: "1rem" }}
//           />
//           <Input
//             type="text"
//             placeholder="Nh√¢n vi√™n"
//             value={constructionStaff}
//             onChange={(e) => setConstructionStaff(e.target.value)}
//             style={{ marginBottom: "1rem" }}
//           />
//           <Input
//             type="text"
//             placeholder="N·ªôi dung"
//             value={content}
//             onChange={(e) => setContent(e.target.value)}
//             style={{ marginBottom: "1rem" }}
//           />
//           <Input
//             type="date"
//             placeholder="Ng√†y k·∫øt th√∫c"
//             value={endDate}
//             onChange={(e) => setEndDate(e.target.value)}
//             style={{ marginBottom: "1rem" }}
//           />
//           <Button
//             type="primary"
//             onClick={handleSubmit}
//             style={{ marginRight: "1rem" }}
//           >
//             G·ª≠i ƒë∆°n gi√°
//           </Button>
//         </form>
//       </Modal>
//     </>
//   );
// };

// export default CreateMan;
